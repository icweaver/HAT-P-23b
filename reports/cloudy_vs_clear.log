Traceback (most recent call last):
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
"""
Updated Stevenson+ 16 plot using the H2O-J measurements from 
Wakeford+ 2019
"""
fig, ax = plt.subplots(figsize=FIG_WIDE)

# Plot catalog targets
g_pop_pos_idxs = g_pop > 0.0  # Avoid taking log of invalid nums
logg_southworth = np.log10(100 * g_pop[g_pop_pos_idxs])  # log10(SI -> CGS)
T_eq_southworth = Teq_pop[g_pop_pos_idxs]
ax.plot(
    logg_southworth,
    T_eq_southworth,
    "o",
    color="gray",
    alpha=0.3,
    zorder=-10,
    ms=10,
    mew=0,
)

# Plot H2O-J information
points = ax.scatter(
    logg_wakeford,
    Teq_wakeford,
    c=H2O_J,
    marker="s",
    s=100,
    edgecolor="k",
    cmap="PuOr",
    vmin=0,
    vmax=2,
)
cbar = plt.colorbar(points)
cbar.set_label("H$_{2}$O - J", fontsize=16, labelpad=30, rotation=270)

# Plot HAT-P-23b for context
targ_coords = (3.485, 2027)
ax.scatter(
    *targ_coords,
    c="#F3F3F3",
    marker="*",
    s=1000,
    edgecolor="k",
    cmap="PuOr",
    vmin=0,
    vmax=2,
)
ax.annotate(
    "HAT-P-23b",
    xy=targ_coords,
    xytext=(10, 10),
    textcoords="offset points",
    # ha = "left",
    fontsize=12,
    weight="bold",
)


# Plot divide
m = (300 - 2100) / (3.3 - 2.4)
loggs = np.linspace(*ax.get_xlim(), 100)
Teqs = m * (loggs - 2.4) + 2100
ax.plot(loggs, Teqs, ls="dashed", lw=3, color="grey")

# Save
ax.set_xlim(2.4, 4.0)
ax.set_ylim(300, 2_700)
ax.set_xlabel("$log(g)$ (dex)")
ax.set_ylabel("T$_{eq}$ (K)")
#utils.savefig("../paper/figures/cloudy_vs_clear/cloudy_vs_clear.pdf")
fig.set_size_inches(FIG_WIDE)
plt.savefig("/home/mango/Projects/tac_3/cloudy_vs_clear.png", dpi=250, bbox_inches="tight")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-8-5f44ee93531b>[0m in [0;36m<module>[0;34m[0m
[1;32m     71[0m [0;31m#utils.savefig("../paper/figures/cloudy_vs_clear/cloudy_vs_clear.pdf")[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     72[0m [0mfig[0m[0;34m.[0m[0mset_size_inches[0m[0;34m([0m[0mFIG_WIDE[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 73[0;31m [0mplt[0m[0;34m.[0m[0msavefig[0m[0;34m([0m[0;34m"/home/mango/Projects/tac_3/cloudy_vs_clear.png"[0m[0;34m,[0m [0mdpi[0m[0;34m=[0m[0;36m250[0m[0;34m,[0m [0mbbox_inches[0m[0;34m=[0m[0;34m"tight"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/matplotlib/pyplot.py[0m in [0;36msavefig[0;34m(*args, **kwargs)[0m
[1;32m    857[0m [0;32mdef[0m [0msavefig[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    858[0m     [0mfig[0m [0;34m=[0m [0mgcf[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 859[0;31m     [0mres[0m [0;34m=[0m [0mfig[0m[0;34m.[0m[0msavefig[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    860[0m     [0mfig[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mdraw_idle[0m[0;34m([0m[0;34m)[0m   [0;31m# need this if 'transparent=True' to reset colors[0m[0;34m[0m[0;34m[0m[0m
[1;32m    861[0m     [0;32mreturn[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/matplotlib/figure.py[0m in [0;36msavefig[0;34m(self, fname, transparent, **kwargs)[0m
[1;32m   2309[0m                 [0mpatch[0m[0;34m.[0m[0mset_edgecolor[0m[0;34m([0m[0;34m'none'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2310[0m [0;34m[0m[0m
[0;32m-> 2311[0;31m         [0mself[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mprint_figure[0m[0;34m([0m[0mfname[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2312[0m [0;34m[0m[0m
[1;32m   2313[0m         [0;32mif[0m [0mtransparent[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/matplotlib/backend_bases.py[0m in [0;36mprint_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2208[0m [0;34m[0m[0m
[1;32m   2209[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2210[0;31m                 result = print_method(
[0m[1;32m   2211[0m                     [0mfilename[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2212[0m                     [0mdpi[0m[0;34m=[0m[0mdpi[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/matplotlib/backend_bases.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m   1637[0m             [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1638[0m [0;34m[0m[0m
[0;32m-> 1639[0;31m         [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1640[0m [0;34m[0m[0m
[1;32m   1641[0m     [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py[0m in [0;36mprint_png[0;34m(self, filename_or_obj, metadata, pil_kwargs, *args)[0m
[1;32m    508[0m         """
[1;32m    509[0m         [0mFigureCanvasAgg[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 510[0;31m         mpl.image.imsave(
[0m[1;32m    511[0m             [0mfilename_or_obj[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mbuffer_rgba[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mformat[0m[0;34m=[0m[0;34m"png"[0m[0;34m,[0m [0morigin[0m[0;34m=[0m[0;34m"upper"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    512[0m             dpi=self.figure.dpi, metadata=metadata, pil_kwargs=pil_kwargs)

[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/matplotlib/image.py[0m in [0;36mimsave[0;34m(fname, arr, vmin, vmax, cmap, format, origin, dpi, metadata, pil_kwargs)[0m
[1;32m   1603[0m         [0mpil_kwargs[0m[0;34m.[0m[0msetdefault[0m[0;34m([0m[0;34m"format"[0m[0;34m,[0m [0mformat[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1604[0m         [0mpil_kwargs[0m[0;34m.[0m[0msetdefault[0m[0;34m([0m[0;34m"dpi"[0m[0;34m,[0m [0;34m([0m[0mdpi[0m[0;34m,[0m [0mdpi[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1605[0;31m         [0mimage[0m[0;34m.[0m[0msave[0m[0;34m([0m[0mfname[0m[0;34m,[0m [0;34m**[0m[0mpil_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1606[0m [0;34m[0m[0m
[1;32m   1607[0m [0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/hatp23b/lib/python3.9/site-packages/PIL/Image.py[0m in [0;36msave[0;34m(self, fp, format, **params)[0m
[1;32m   2159[0m                 [0mfp[0m [0;34m=[0m [0mbuiltins[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"r+b"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2160[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2161[0;31m                 [0mfp[0m [0;34m=[0m [0mbuiltins[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"w+b"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2162[0m [0;34m[0m[0m
[1;32m   2163[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/home/mango/Projects/tac_3/cloudy_vs_clear.png'
FileNotFoundError: [Errno 2] No such file or directory: '/home/mango/Projects/tac_3/cloudy_vs_clear.png'

